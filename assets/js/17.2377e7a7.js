(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{799:function(a,t,v){"use strict";v.r(t);var e=v(38),p=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"uniapp学习指南"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uniapp学习指南"}},[a._v("#")]),a._v(" uniapp学习指南")]),a._v(" "),t("h2",{attrs:{id:"什么是uniapp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是uniapp"}},[a._v("#")]),a._v(" 什么是uniapp")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v("uni-app")]),a._v(" 是一个使用 Vue.js开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信/支付宝/百度/头条/飞书/QQ/快手/钉钉/淘宝）、快应用等多个平台。"),t("a",{attrs:{href:"https://uniapp.dcloud.net.cn/",target:"_blank",rel:"noopener noreferrer"}},[a._v("详情点击 uni-app 官方文档"),t("OutboundLink")],1)])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("uni-app")]),a._v(" 在跨端数量、扩展能力、性能体验、周边生态、学习成本、开发成本等6大关键指标上拥有极强的竞争优势：")]),a._v(" "),t("ul",[t("li",[a._v("跨端数量更多")]),a._v(" "),t("li",[a._v("平台能力不受限")]),a._v(" "),t("li",[a._v("性能体验更优秀")]),a._v(" "),t("li",[a._v("周边生态丰富")]),a._v(" "),t("li",[a._v("学习成本低")]),a._v(" "),t("li",[a._v("开发成本低")])])])]),a._v(" "),t("h2",{attrs:{id:"为什么选择uniapp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择uniapp"}},[a._v("#")]),a._v(" 为什么选择uniapp")]),a._v(" "),t("p",[a._v("我们在开发过程中需要选择合适的框架，工欲善其事，必先利其器，所以选择一个适合自己且适合开发需求的框架会让我们在开发中事半功倍。")]),a._v(" "),t("h3",{attrs:{id:"与其他跨平台框架有何不同-app"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与其他跨平台框架有何不同-app"}},[a._v("#")]),a._v(" 与其他跨平台框架有何不同（app）")]),a._v(" "),t("p",[a._v("我列举了以下三个在开发app端常用的框架，我们将从编译速度，开发难度与页面呈现效果三个方面对比")]),a._v(" "),t("ul",[t("li",[a._v("reactNative")]),a._v(" "),t("li",[a._v("uniapp")]),a._v(" "),t("li",[a._v("Flutter")])]),a._v(" "),t("p",[a._v("从编译速度上与呈现效果上对比：")]),a._v(" "),t("blockquote",[t("p",[a._v("Flutter > reactNative >= uniapp")])]),a._v(" "),t("p",[a._v("跨平台开发第一个考虑的就是性能问题，RN的效率由于是将View编译成了原生View，所以效率上要比基于Cordova的HTML5高很多，但是它也有效率问题，RN的渲染机制是基于前端框架的考虑，复杂的UI渲染是需要依赖多个view叠加。比如我们渲染一个复杂的ListView，每一个小的控件，都是一个native的view，然后相互组合叠加。想想此时如果我们的list再需要滑动刷新，会有多少个对象需要渲染，所以也就有了前面所说的RN的列表方案不友好。")]),a._v(" "),t("p",[a._v("Flutter吸收了前两者的教训之后，在渲染技术上，选择了自己实现(GDI)，由于有更好的可控性，使用了新的语言Dart，避免了RN的那种通过桥接器与Javascript通讯导致效率低下的问题。所以在性能方面比RN更高一筹，有经验的开发者可以打开Android手机开发者选项里面的显示边界布局，发现Flutter的布局是一个整体，说明Flutter的渲染没有使用原生控件进行渲染。")]),a._v(" "),t("p",[a._v("言简意赅，RN在app端会将html组件渲染成原生组件，有这么一个过程，flutter有自己的渲染方式，不走寻常路，省下了这一编译的过程。我们再说下uniapp，它也提供了nvue页面，支持大家写weex语法，和RN编译过程类似，但同时，nvue页面限制过多，所以框架并没有限制开发者只能使用nvue编程，还可以选择写vue页面，这个时候渲染方式就是webview的方式。")]),a._v(" "),t("p",[a._v("从开发难度上对比：")]),a._v(" "),t("blockquote",[t("p",[a._v("Flutter > reactNative >= uniapp")])]),a._v(" "),t("p",[a._v("经过上面的介绍，大家心中也应该有一个大概，Flutter为了追求更好的体验，开发了自己的一套面向对象语言——Dart语言，而RN需要学习react，所以这里uniapp的学习成本还是相对于其他来说是比较低的，只要学习过vue都能轻松上手。")]),a._v(" "),t("h3",{attrs:{id:"与其他跨平台框架有何不同-小程序-or-h5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与其他跨平台框架有何不同-小程序-or-h5"}},[a._v("#")]),a._v(" 与其他跨平台框架有何不同（小程序 or h5）")]),a._v(" "),t("p",[a._v("我再次列举了以下三个在开发小程序或者h5端常用的框架。")]),a._v(" "),t("ul",[t("li",[a._v("taro")]),a._v(" "),t("li",[a._v("uniapp")]),a._v(" "),t("li",[a._v("mpvue")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/wyd112821/jm-team-images@master/20220928/3dcf0177-3363-4348-8721-54a5b9f86214.1ej1gemk6yhs.webp",alt:"图片"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/wyd112821/jm-team-images@master/20220928/48608790-e8d7-4799-ab02-5864ace3d119.9rq9vpmqpt4.webp",alt:"图片"}})]),a._v(" "),t("p",[a._v("这里我贴了两张对比图来说明，可见uniapp在跨平台方面做得还是非常全的，基本上能覆盖所有小程序端和h5端，另外，uniapp的插件市场提供了海量的插件，相对于其他框架，物料这方面基本上满足了开发者工作需要。")]),a._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[a._v("结论")]),a._v(" "),t("p",[a._v("uniapp基本上能满足我们日常快速开发多端的需求，相对于其他只针对于单一的跨端开发，unipp覆盖了所有平台，所提供的物料也更多，方便开发者去选择，另外，uniapp的api也非常亲民，封装了所要开发端的api，可以让开发者直接使用uniapp的api去调用所要开发端的api，十分的好用。")])]),a._v(" "),t("h2",{attrs:{id:"目录结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[a._v("#")]),a._v(" 目录结构")]),a._v(" "),t("p",[a._v("好了，这下大家更清楚的知道我们为什么要选择用uniapp去开发app或小程序和h5了，废话不多说，让我们直接进入正题，看看uniapp项目的目录结构。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/wyd112821/jm-team-images@master/20220928/53563f58-ba75-4f4a-b43e-b3c423ed38b6.64o9u4h8g8s.webp",alt:"图片"}})]),a._v(" "),t("p",[a._v("目录结构几乎与我们日常开发的vue项目一致，只是有稍许不同，所以大家只要会vue，可以轻松上手uniapp开发。接下来，我们就一些重要目录去介绍，其他目前结构可查看"),t("a",{attrs:{href:"https://uniapp.dcloud.net.cn/",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方文档"),t("OutboundLink")],1),a._v("。")]),a._v(" "),t("h3",{attrs:{id:"unicloud"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unicloud"}},[a._v("#")]),a._v(" uniCloud")]),a._v(" "),t("p",[a._v("uniCloud并不是uniapp的专属，也是大前端时代非常火的一个概念。uniCloud是DCloud 联合阿里云、腾讯云，为开发者提供的基于 serverless 模式和 js 编程的云开发平台。")]),a._v(" "),t("p",[a._v("Serverless称为微服务运算，但不代表它真的不需要服务，而是说开发者再也不用过多考虑服务器的问题，计算资源作为服务而不是服务器的概念出现。Serverless是一种构建和管理基于微服务架构的技术，允许开发者在服务部署级别而不是服务器部署级别来管理应用部署，你甚至可以管理某个具体功能或端口的部署，以便让开发者快速迭代，更快速地开发软件。")]),a._v(" "),t("p",[a._v("Serverless 的全称是Serverless computing无服务器运算，又被称为函数即服务（Function-as-a-Service，缩写为 FaaS），是云计算的一种模型。以平台即服务（PaaS）为基础，无服务器运算提供一个微型的架构，终端客户不需要部署、配置或管理服务器服务，代码运行所需要的服务器服务皆由云端平台来提供。 国内外比较出名的产品有Tencent Serverless、AWS Lambda、Microsoft Azure Functions 等。")]),a._v(" "),t("p",[a._v("可以再不用关心热备、负载、增容、DDOS等事情。简单的来说，就是前端开发者不再需要依靠后端写接口部署到服务器上，前端可以自行依靠大厂的云平台自行实现调用数据库的功能实现纯前端开发一款软件。例：支付，发送短信，登陆等功能")]),a._v(" "),t("h3",{attrs:{id:"uni-modules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uni-modules"}},[a._v("#")]),a._v(" uni_modules")]),a._v(" "),t("p",[a._v("uni_modules类似于我们开发中用npm之类的包管理工具，不过uni_modules是uniapp项目的专属，可以让用户在插件市场将插件傻瓜式的安装到开发者本地项目内，一旦引入，就不需要引入，注册组件，可以直接使用组件。")]),a._v(" "),t("p",[a._v("当然，uniapp也不会限制用户去使用npm之类的包管理工具，用户一样可以用包管理工具去下载自己所需要的插件。")]),a._v(" "),t("h3",{attrs:{id:"manifest-json"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#manifest-json"}},[a._v("#")]),a._v(" manifest.json")]),a._v(" "),t("p",[a._v("manifest.json是uniapp的配置文件，可以配置打包信息和项目appid，名称之类的，在hbulidx中打开，会是一个可视化傻瓜操作界面。除此之外，大家发现，uniapp开发并没有和vue开发有什么不同，大大提高了开发者的效率。")]),a._v(" "),t("h2",{attrs:{id:"跨端注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨端注意"}},[a._v("#")]),a._v(" 跨端注意")]),a._v(" "),t("p",[a._v("如果要开发多端，接下来就要注意了。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("nvue和vue页面的区别；")]),a._v(" "),t("ol",[t("li",[a._v("一个页面可以写.nvue和.vue两种文件，按编译平台不同会自动渲染不同文件；")]),a._v(" "),t("li",[a._v("uniapp是逻辑和渲染分离的，渲染层在app端提供了两套排版引擎；")]),a._v(" "),t("li",[a._v("nvue只能使用flex布局.")]),a._v(" "),t("li",[a._v("小程序方式的webview渲染，和weex方式的原生渲染，两种渲染引擎可以自己根据需要选。vue文件走小程序方式的webview渲染,nvue走weex方式的原生渲染.")])])]),a._v(" "),t("li",[t("p",[a._v("条件编译\n"),t("img",{attrs:{src:"https://cdn.staticaly.com/gh/wyd112821/jm-team-images@master/20220928/1861d386-809f-4894-be0a-8e8db6bd9d0d.39vm90z18y00.webp",alt:"图片"}})]),a._v(" "),t("p",[a._v("条件编译也是uniapp开发中经常使用到的，尤其是开发app和h5端，有些只有app原生能调用的api，比如plus对象，就需要用条件编译告诉框架这块代码只能出现在app端。")])])]),a._v(" "),t("h2",{attrs:{id:"uni小程序sdk应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uni小程序sdk应用"}},[a._v("#")]),a._v(" uni小程序SDK应用")]),a._v(" "),t("p",[a._v("最后我们再来谈谈uni小程序SDK应用的场景，这里uni小程序SDK不是单一开发某一个小程序，而是可以让你的原生app拥有小程序的运行环境，类似于微信，支付宝。")]),a._v(" "),t("p",[a._v("日常开发原生app，会遇到以下几种痛点：")]),a._v(" "),t("ul",[t("li",[a._v("相同功能还是需要开发安卓ios两端，拖累了项目节奏，没有提高开发效率；")]),a._v(" "),t("li",[a._v("部分功能改动频繁，日常发送到app市场审核效率太慢，没有办法做热更新；")])]),a._v(" "),t("p",[a._v("以上两点uni小程序SDK都可以同时满足，所以十分的实用，初次之外，uni小程序sdk要调用的其他sdk都可以交给原生app打包，小程序只需要实现调用，这样让小程序包会大大的减小，提高用户下载效率。")]),a._v(" "),t("h2",{attrs:{id:"结语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[a._v("#")]),a._v(" 结语")]),a._v(" "),t("blockquote",[t("p",[a._v("uniapp还是十分方便的开发框架，应用程度广泛，只要会使用vue开发，都可以轻松上手，值得入坑学习。")])])])}),[],!1,null,null,null);t.default=p.exports}}]);